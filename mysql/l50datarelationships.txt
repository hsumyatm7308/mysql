=>Data Relationships 
(i)ONE to ONE Relationships (1:1)
(i)ONE to MANY Relationships (1:n)
(iii)MANY to MANY Relationships (n:n) 

students 1:1 studentsinfos
teachers 1:n classes 
enrollments n:n 
reviews n:n 

DLT Co.,Ltd  

=>students 
id 
regcode
firstname 
lastname 
gender 
dob 
email 
password  
status 
created_at 
updated_at 


CREATE TABLE IF NOT EXISTS students(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    regcode VARCHAR(10)NOT NULL UNIQUE,
    firstname VARCHAR(20)NOT NULL,
    lastname VARCHAR(20),
    gender ENUM('1','0') NOT NULL,
    dob DATE NOT NULL,
    email VARCHAR(50)NOT NULL UNIQUE,
    password VARCHAR(255)NOT NULL,
    status ENUM('ENABLE','DISABLE','TERMINATE)DEFAULT 'ENABLE',
    created TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DESC students;


=>studentinfos 
id 
coverphoto 
profilephoto 
nrc 
phone 
address 
student_id (students.pk)fk 

note : role 1 = students ROLE 2 = teachers 


CREATE TABLE IF NOT EXISTS studentinfos(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    coverphoto VARCHAR(255),
    profilephoto VARCHAR(255),
    phone VARCHAR(15)NOT NULL UNIQUE,
    address VARCHAR(100) NOT NULL,
    role INT() DEFAULT 1,
    student_id INT 
    FOREIGN KEY(studen_id) REFERENCES students('id') ON UPDATE CASCADE ON DELETE CASCADE
    nrc VARCHAR(100),

);

=>subjects 
id 
img 
course 
subjecttype 
content
requirement 

CREATE TABLE IF NOT EXISTS subjects (

    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    img VARCHAR(255),
    course VARCHAR(100) NOT NULL UNIQUE,
    subjecttype SET('THEORY','PROJECT') NOT NULL ,
    free DECIMAL(10,2) , DEFAULT 0,
    requirement VARCHAR(255)
)

=>teachers 
id (pk)
name 
phone 
email 

CREATE TABLE IF NOT 
EXISTS teachers(
    id INT NULL PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NNULL,
    phone VARCHAR(255) NOT NULL
)


=>classes 
id 
subject_id(subject_pk)fk 
batch 
fee
startdate 
week 
starttime 
endtime  
teacher_id(teachers_pk)fk

CREATE TABLE IF NOT EXISTS classes(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    subject_id INT,
    batch INT NOT NULL,
    fee DECIMAL(10,2) DEFAULT 0,
    startdate DATE NOT NULL,
    week SET('sun','mon','tue','wed','thu','fri','sat') NOT NULL ,
    starttime TIME NOT NULL,
    endtime TIME NOT NULL,
    teacher_id INT,
    FOREIGN KEY(subject_id) REFERENCES subjects(id),
    FOREIGN KEY(teacher_id) REFERENCES teachers(id)
)

=>attendances 
id 
class_id(classes_pk)fk
student_id(student_pk)fk 
attcode 
remark 
created_at 

CREATE TABLE IF NOT EXISTS classes(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    class_id INT,
    student_id INT,
    attcode VARCHAR(5) NOT NULL,
    remark VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),

    FOREIGN KEY(class_id) REFERENCES subjects(id),
    FOREIGN KEY(studen_id) REFERENCES teachers(id)
)


=>datastorage 
id 
url 
class_id(classes_pk)fk 
enrollments_id(enrollments_pk)fk 
classdate 
created_at 

CREATE TABLE IF NOT EXISTS datastorage(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    url VARCHAR(255) NOT NULL
    class_id INT,
    enrollments_id INT,



   classdate DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,


    FOREIGN KEY(class_id) REFERENCES classes(id) ,
    FOREIGN KEY(enrollments_id) REFERENCES enrollments(id) 
)



=>enrollments 
id 
paymentmethod 
class_id(classes_pk)fk 
student_id(student_pk)fk 
status 
created_at 
updated_at 


CREATE TABLE IF NOT EXISTS enrollments(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    class_id INT,
    student_id INT,
    status ENUM('enable','disable') DEFAULT 'enable',
   paymentmethod enum('wire','kpay','cbpay','visa','wavemoney') NOT NULL ,
   created_at TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,


    FOREIGN KEY(class_id) REFERENCES classes(id) ON UPDATE CASCADE,
    FOREIGN KEY(studen_id) REFERENCES students(id) ON UPDATE CASCADE
)



=reviews 
id 
rating 
remark 
class_id(classes_pk)fk 
student_id (students.pk)fk 
created_at



CREATE TABLE IF NOT EXISTS enrollments(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    rating INT NOT NULL CHECK (RATING <= 5),
    remark VARCHAR(150),


    class_id INT,
    student_id INT,


   created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,


    FOREIGN KEY(class_id) REFERENCES classes(id) ON UPDATE CASCADE,
    FOREIGN KEY(studen_id) REFERENCES students(id) ON UPDATE CASCADE
)




15PP 

CREATE TABLE IF NOT EXISTS customers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50),
    phone VARCHAR(50)UNIQUE,
    address VARCHAR(50),
    startdate CURRENT_TIMESTAMP 
    expiredate DATE
);

CREATE TABLE IF NOT EXISTS paymenttypes(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    payment ENUM('VISA','MPU','MASTER') NOT NULL,
    paymentamount INT,
    cloth VARCHAR(50),
    clothamount INT,
);


29DB 

